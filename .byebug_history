exit
items.search_color(["зеленый", "красный", "салатовый"]).all
items.search_color(["зеленый", "красный", "салатовый"]).фдд
items.search_color(["зеленый", "красный", "салатовый"]).count
items.search_color(["зеленый", "красный", "sadf"]).count
items.search_color(["зеленый", "красный"]).count
exit
 items.search_color(["зеленый", "красный"]).count
exit
items.search_color(["зеленый", "красный"]).count
items.search_color(["зеленый"],["красный"]).count
items.search_color(["зеленый"] ["красный"]).count
items.search_color(["зеленый", "красный"]).count
items.search_color(["зеленый" "красный"]).count
items.search_color(["зеленый","красный"]).count
items.search_color(["красный"]).count
items.search_color(["зеленый","красный"]).count
exit
items.search_color(["зеленый","красный"]).count
items.map { |item| item.color}.uniq!
items.search_color("зеленый").count
items.search_color("красный").count
items.search_color("зеленый, красный").count
items.search_color("зеленыйб красный").count
items.search_color("зеленый красный").count
items.search_color("зеленый красный"]).count
items.search_color(["зеленый","красный"]).count
items.search_color("зеленый").count
items.search_color("красный").count
items.search_color("красный")
exit
учше
items.search_color("салатовый")
items.search_color("салатовый").count 
items.search_color("серый").count 
items.search_color("серый/салатовый").count 
items.search_color("серый/салатовый")
items.search_color("серый/салатовый").count 
items.search_color("красный").count 
items.search_color("красныый").count 
items.search_color("краснddый").count 
items.search_color("красный").count 
items.where(color: "красный").count 
items.where(color: "Красный").count 
exit
current_main_colors << (include_color.keys)[0].to_s if include_color
current_main_colors << (include_color.keys)[0].to_s if include_color.present?
include_color
exit
vasa.map{|a| a.split("/")}.flatten.map(&:capitalize).uniq!.count
vasa.map{|a| a.split("/")}.flatten.map(&:upcase).uniq!.count
vasa.map{|a| a.split("/")}.flatten.map(&:upcase).uniq!
vasa.map{|a| a.split("/")}.flatten.map(&:uppecase).uniq!
vasa.map{|a| a.split("/")}.flatten.uppecase.uniq!
vasa.map{|a| a.split("/")}.flatten.uppecase..uniq!
vasa.map{|a| a.split("/")}.flatten.uniq!
vasa.map{|a| a.split("/")}.flatten.uniq.count
vasa.map{|a| a.split("/")}.flatten.count
vasa.map{|a| a.split("/")}.flatten
vasa.map{|a| a.split("/")}
vasa.split("/")
vasa = items.map { |item| item.color}.uniq!
